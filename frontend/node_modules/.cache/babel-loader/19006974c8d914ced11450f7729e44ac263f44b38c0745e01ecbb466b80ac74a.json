{"ast":null,"code":"var _jsxFileName = \"C:\\\\vinay\\\\projects\\\\Email\\\\frontend\\\\src\\\\components\\\\AiReplyGenerator.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useMutation } from '@tanstack/react-query';\n// import { XMarkIcon, SparklesIcon } from '@heroicons/react/24/outline';\n// import { emailApi } from '../services/api';\n// import { AiReplyRequest, FeedbackItem } from '../types';\n\n// interface AiReplyGeneratorProps {\n//   emailId: string;\n//   onClose: () => void;\n// }\n\n// const AiReplyGenerator: React.FC<AiReplyGeneratorProps> = ({ emailId, onClose }) => {\n//   const [request, setRequest] = useState<Partial<AiReplyRequest>>({\n//     emailId,\n//     tone: 'professional',\n//     style: 'detailed',\n//     includeToneFeedback: true,\n//     includeClarityFeedback: true,\n//   });\n\n//   const generateReplyMutation = useMutation({\n//     mutationFn: (request: AiReplyRequest) => emailApi.generateAiReply(request),\n//     onSuccess: (data) => {\n//       // Handle success - you might want to update the email or show the generated reply\n//       console.log('Generated reply:', data);\n//     },\n//   });\n\n//   const handleGenerate = () => {\n//     if (request.emailId) {\n//       generateReplyMutation.mutate(request as AiReplyRequest);\n//     }\n//   };\n\n//   const getSeverityColor = (severity: string) => {\n//     switch (severity) {\n//       case 'high':\n//         return 'text-red-600 bg-red-50 border-red-200';\n//       case 'medium':\n//         return 'text-yellow-600 bg-yellow-50 border-yellow-200';\n//       case 'low':\n//         return 'text-green-600 bg-green-50 border-green-200';\n//       default:\n//         return 'text-gray-600 bg-gray-50 border-gray-200';\n//     }\n//   };\n\n//   return (\n//     <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n//       <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n//         <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" onClick={onClose} />\n\n//         <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full\">\n//           <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n//             <div className=\"flex items-center justify-between mb-4\">\n//               <div className=\"flex items-center\">\n//                 <SparklesIcon className=\"h-6 w-6 text-primary-600 mr-2\" />\n//                 <h3 className=\"text-lg font-medium text-gray-900\">Generate AI Reply</h3>\n//               </div>\n//               <button\n//                 onClick={onClose}\n//                 className=\"text-gray-400 hover:text-gray-600\"\n//               >\n//                 <XMarkIcon className=\"h-6 w-6\" />\n//               </button>\n//             </div>\n\n//             <div className=\"space-y-4\">\n//               {/* Tone Selection */}\n//               <div>\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n//                   Tone\n//                 </label>\n//                 <select\n//                   value={request.tone}\n//                   onChange={(e) => setRequest({ ...request, tone: e.target.value })}\n//                   className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\n//                 >\n//                   <option value=\"professional\">Professional</option>\n//                   <option value=\"friendly\">Friendly</option>\n//                   <option value=\"formal\">Formal</option>\n//                   <option value=\"casual\">Casual</option>\n//                 </select>\n//               </div>\n\n//               {/* Style Selection */}\n//               <div>\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n//                   Style\n//                 </label>\n//                 <select\n//                   value={request.style}\n//                   onChange={(e) => setRequest({ ...request, style: e.target.value })}\n//                   className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\n//                 >\n//                   <option value=\"concise\">Concise</option>\n//                   <option value=\"detailed\">Detailed</option>\n//                   <option value=\"empathetic\">Empathetic</option>\n//                 </select>\n//               </div>\n\n//               {/* Additional Context */}\n//               <div>\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n//                   Additional Context (Optional)\n//                 </label>\n//                 <textarea\n//                   value={request.additionalContext || ''}\n//                   onChange={(e) => setRequest({ ...request, additionalContext: e.target.value })}\n//                   rows={3}\n//                   className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\n//                   placeholder=\"Add any additional context or specific instructions...\"\n//                 />\n//               </div>\n\n//               {/* Feedback Options */}\n//               <div className=\"space-y-2\">\n//                 <label className=\"block text-sm font-medium text-gray-700\">\n//                   Include Feedback\n//                 </label>\n//                 <div className=\"space-y-2\">\n//                   <label className=\"flex items-center\">\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={request.includeToneFeedback}\n//                       onChange={(e) => setRequest({ ...request, includeToneFeedback: e.target.checked })}\n//                       className=\"rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n//                     />\n//                     <span className=\"ml-2 text-sm text-gray-700\">Tone feedback</span>\n//                   </label>\n//                   <label className=\"flex items-center\">\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={request.includeClarityFeedback}\n//                       onChange={(e) => setRequest({ ...request, includeClarityFeedback: e.target.checked })}\n//                       className=\"rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n//                     />\n//                     <span className=\"ml-2 text-sm text-gray-700\">Clarity feedback</span>\n//                   </label>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n\n//           {/* Generated Reply Section */}\n//           {generateReplyMutation.data && (\n//             <div className=\"bg-gray-50 px-4 py-4 sm:px-6\">\n//               <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Generated Reply</h4>\n//               <div className=\"bg-white p-4 rounded-lg border border-gray-200 mb-4\">\n//                 <pre className=\"whitespace-pre-wrap text-sm text-gray-900\">\n//                   {generateReplyMutation.data.generatedReply}\n//                 </pre>\n//               </div>\n\n//               {/* Feedback Section */}\n//               {(generateReplyMutation.data.toneFeedback.length > 0 || generateReplyMutation.data.clarityFeedback.length > 0) && (\n//                 <div className=\"space-y-4\">\n//                   {generateReplyMutation.data.toneFeedback.length > 0 && (\n//                     <div>\n//                       <h5 className=\"text-sm font-medium text-gray-900 mb-2\">Tone Feedback</h5>\n//                       <div className=\"space-y-2\">\n//                         {generateReplyMutation.data.toneFeedback.map((feedback: FeedbackItem, index: number) => (\n//                           <div\n//                             key={index}\n//                             className={`p-3 rounded-lg border ${getSeverityColor(feedback.severity)}`}\n//                           >\n//                             <div className=\"flex items-start\">\n//                               <div className=\"flex-1\">\n//                                 <p className=\"text-sm font-medium\">{feedback.category}</p>\n//                                 <p className=\"text-sm mt-1\">{feedback.suggestion}</p>\n//                                 <p className=\"text-xs mt-1 opacity-75\">{feedback.reason}</p>\n//                               </div>\n//                               <span className={`text-xs px-2 py-1 rounded-full ${getSeverityColor(feedback.severity)}`}>\n//                                 {feedback.severity}\n//                               </span>\n//                             </div>\n//                           </div>\n//                         ))}\n//                       </div>\n//                     </div>\n//                   )}\n\n//                   {generateReplyMutation.data.clarityFeedback.length > 0 && (\n//                     <div>\n//                       <h5 className=\"text-sm font-medium text-gray-900 mb-2\">Clarity Feedback</h5>\n//                       <div className=\"space-y-2\">\n//                         {generateReplyMutation.data.clarityFeedback.map((feedback: FeedbackItem, index: number) => (\n//                           <div\n//                             key={index}\n//                             className={`p-3 rounded-lg border ${getSeverityColor(feedback.severity)}`}\n//                           >\n//                             <div className=\"flex items-start\">\n//                               <div className=\"flex-1\">\n//                                 <p className=\"text-sm font-medium\">{feedback.category}</p>\n//                                 <p className=\"text-sm mt-1\">{feedback.suggestion}</p>\n//                                 <p className=\"text-xs mt-1 opacity-75\">{feedback.reason}</p>\n//                               </div>\n//                               <span className={`text-xs px-2 py-1 rounded-full ${getSeverityColor(feedback.severity)}`}>\n//                                 {feedback.severity}\n//                               </span>\n//                             </div>\n//                           </div>\n//                         ))}\n//                       </div>\n//                     </div>\n//                   )}\n//                 </div>\n//               )}\n//             </div>\n//           )}\n\n//           {/* Action Buttons */}\n//           <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n//             <button\n//               type=\"button\"\n//               onClick={handleGenerate}\n//               disabled={generateReplyMutation.isPending}\n//               className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-primary-600 text-base font-medium text-white hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:ml-3 sm:w-auto sm:text-sm disabled:opacity-50\"\n//             >\n//               {generateReplyMutation.isPending ? (\n//                 <>\n//                   <div className=\"spinner mr-2\"></div>\n//                   Generating...\n//                 </>\n//               ) : (\n//                 'Generate Reply'\n//               )}\n//             </button>\n//             <button\n//               type=\"button\"\n//               onClick={onClose}\n//               className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n//             >\n//               Close\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AiReplyGenerator;\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { XMarkIcon, PaperAirplaneIcon, DocumentTextIcon, ClockIcon, SparklesIcon } from '@heroicons/react/24/outline';\nimport { emailApi } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AiReplyGenerator({\n  emailId,\n  originalEmail,\n  onClose,\n  onReplySent\n}) {\n  _s();\n  const [replyContent, setReplyContent] = useState('');\n\n  // Generate AI reply mutation\n  const generateReplyMutation = useMutation({\n    mutationFn: () => {\n      const request = {\n        emailId,\n        tone: 'professional',\n        style: 'detailed',\n        includeToneFeedback: true,\n        includeClarityFeedback: true\n      };\n      return emailApi.generateAiReply(request);\n    },\n    onSuccess: data => {\n      setReplyContent(data.generatedReply); // set editable content\n    },\n    onError: error => {\n      console.error('Error generating AI reply:', error);\n      alert('Failed to generate AI reply. Please try again.');\n    }\n  });\n\n  // Send reply mutation\n  const sendReplyMutation = useMutation({\n    mutationFn: data => emailApi.sendReply(data.emailId, data.reply, 'current-user'),\n    onSuccess: () => {\n      onReplySent === null || onReplySent === void 0 ? void 0 : onReplySent();\n      onClose();\n    },\n    onError: error => {\n      console.error('Error sending reply:', error);\n      alert('Failed to send reply. Please try again.');\n    }\n  });\n  const handleGenerateReply = () => generateReplyMutation.mutate();\n  const handleSendReply = () => {\n    if (!replyContent.trim()) {\n      alert('Reply cannot be empty.');\n      return;\n    }\n    sendReplyMutation.mutate({\n      emailId,\n      reply: replyContent\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg w-full max-w-2xl relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"absolute top-3 right-3 text-gray-400 hover:text-gray-600\",\n        children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n          className: \"h-6 w-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-medium text-gray-900 mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(SparklesIcon, {\n          className: \"h-5 w-5 text-indigo-500 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), \"AI Reply Generator\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), originalEmail && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 border-l-4 border-gray-200 pl-4 text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 16\n          }, this), \" \", originalEmail.from]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 16\n          }, this), \" \", originalEmail.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), originalEmail.body && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 line-clamp-3\",\n          children: originalEmail.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [generateReplyMutation.isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center text-gray-500 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(ClockIcon, {\n            className: \"h-5 w-5 mr-2 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), \"Generating AI reply...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: replyContent,\n          onChange: e => setReplyContent(e.target.value),\n          rows: 8,\n          className: \"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\",\n          placeholder: \"AI-generated reply will appear here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-3\",\n        children: !generateReplyMutation.data ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleGenerateReply,\n          disabled: generateReplyMutation.isPending,\n          className: \"inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm disabled:opacity-50\",\n          children: generateReplyMutation.isPending ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ClockIcon, {\n              className: \"h-4 w-4 mr-2 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this), \"Generating...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DocumentTextIcon, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), \"Generate AI Reply\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSendReply,\n          disabled: sendReplyMutation.isPending,\n          className: \"inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-green-600 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 sm:text-sm disabled:opacity-50\",\n          children: sendReplyMutation.isPending ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ClockIcon, {\n              className: \"h-4 w-4 mr-2 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 19\n            }, this), \"Sending...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this), \"Send Reply\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n}\n_s(AiReplyGenerator, \"L5yaej8h4Z3GCRQkNVsDmR/Jw9g=\", false, function () {\n  return [useMutation, useMutation];\n});\n_c = AiReplyGenerator;\nvar _c;\n$RefreshReg$(_c, \"AiReplyGenerator\");","map":{"version":3,"names":["React","useState","useMutation","XMarkIcon","PaperAirplaneIcon","DocumentTextIcon","ClockIcon","SparklesIcon","emailApi","jsxDEV","_jsxDEV","Fragment","_Fragment","AiReplyGenerator","emailId","originalEmail","onClose","onReplySent","_s","replyContent","setReplyContent","generateReplyMutation","mutationFn","request","tone","style","includeToneFeedback","includeClarityFeedback","generateAiReply","onSuccess","data","generatedReply","onError","error","console","alert","sendReplyMutation","sendReply","reply","handleGenerateReply","mutate","handleSendReply","trim","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","from","subject","body","isPending","value","onChange","e","target","rows","placeholder","type","disabled","_c","$RefreshReg$"],"sources":["C:/vinay/projects/Email/frontend/src/components/AiReplyGenerator.tsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useMutation } from '@tanstack/react-query';\r\n// import { XMarkIcon, SparklesIcon } from '@heroicons/react/24/outline';\r\n// import { emailApi } from '../services/api';\r\n// import { AiReplyRequest, FeedbackItem } from '../types';\r\n\r\n// interface AiReplyGeneratorProps {\r\n//   emailId: string;\r\n//   onClose: () => void;\r\n// }\r\n\r\n// const AiReplyGenerator: React.FC<AiReplyGeneratorProps> = ({ emailId, onClose }) => {\r\n//   const [request, setRequest] = useState<Partial<AiReplyRequest>>({\r\n//     emailId,\r\n//     tone: 'professional',\r\n//     style: 'detailed',\r\n//     includeToneFeedback: true,\r\n//     includeClarityFeedback: true,\r\n//   });\r\n\r\n//   const generateReplyMutation = useMutation({\r\n//     mutationFn: (request: AiReplyRequest) => emailApi.generateAiReply(request),\r\n//     onSuccess: (data) => {\r\n//       // Handle success - you might want to update the email or show the generated reply\r\n//       console.log('Generated reply:', data);\r\n//     },\r\n//   });\r\n\r\n//   const handleGenerate = () => {\r\n//     if (request.emailId) {\r\n//       generateReplyMutation.mutate(request as AiReplyRequest);\r\n//     }\r\n//   };\r\n\r\n//   const getSeverityColor = (severity: string) => {\r\n//     switch (severity) {\r\n//       case 'high':\r\n//         return 'text-red-600 bg-red-50 border-red-200';\r\n//       case 'medium':\r\n//         return 'text-yellow-600 bg-yellow-50 border-yellow-200';\r\n//       case 'low':\r\n//         return 'text-green-600 bg-green-50 border-green-200';\r\n//       default:\r\n//         return 'text-gray-600 bg-gray-50 border-gray-200';\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n//       <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n//         <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" onClick={onClose} />\r\n\r\n//         <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full\">\r\n//           <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n//             <div className=\"flex items-center justify-between mb-4\">\r\n//               <div className=\"flex items-center\">\r\n//                 <SparklesIcon className=\"h-6 w-6 text-primary-600 mr-2\" />\r\n//                 <h3 className=\"text-lg font-medium text-gray-900\">Generate AI Reply</h3>\r\n//               </div>\r\n//               <button\r\n//                 onClick={onClose}\r\n//                 className=\"text-gray-400 hover:text-gray-600\"\r\n//               >\r\n//                 <XMarkIcon className=\"h-6 w-6\" />\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"space-y-4\">\r\n//               {/* Tone Selection */}\r\n//               <div>\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n//                   Tone\r\n//                 </label>\r\n//                 <select\r\n//                   value={request.tone}\r\n//                   onChange={(e) => setRequest({ ...request, tone: e.target.value })}\r\n//                   className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\r\n//                 >\r\n//                   <option value=\"professional\">Professional</option>\r\n//                   <option value=\"friendly\">Friendly</option>\r\n//                   <option value=\"formal\">Formal</option>\r\n//                   <option value=\"casual\">Casual</option>\r\n//                 </select>\r\n//               </div>\r\n\r\n//               {/* Style Selection */}\r\n//               <div>\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n//                   Style\r\n//                 </label>\r\n//                 <select\r\n//                   value={request.style}\r\n//                   onChange={(e) => setRequest({ ...request, style: e.target.value })}\r\n//                   className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\r\n//                 >\r\n//                   <option value=\"concise\">Concise</option>\r\n//                   <option value=\"detailed\">Detailed</option>\r\n//                   <option value=\"empathetic\">Empathetic</option>\r\n//                 </select>\r\n//               </div>\r\n\r\n//               {/* Additional Context */}\r\n//               <div>\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n//                   Additional Context (Optional)\r\n//                 </label>\r\n//                 <textarea\r\n//                   value={request.additionalContext || ''}\r\n//                   onChange={(e) => setRequest({ ...request, additionalContext: e.target.value })}\r\n//                   rows={3}\r\n//                   className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\r\n//                   placeholder=\"Add any additional context or specific instructions...\"\r\n//                 />\r\n//               </div>\r\n\r\n//               {/* Feedback Options */}\r\n//               <div className=\"space-y-2\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700\">\r\n//                   Include Feedback\r\n//                 </label>\r\n//                 <div className=\"space-y-2\">\r\n//                   <label className=\"flex items-center\">\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={request.includeToneFeedback}\r\n//                       onChange={(e) => setRequest({ ...request, includeToneFeedback: e.target.checked })}\r\n//                       className=\"rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\r\n//                     />\r\n//                     <span className=\"ml-2 text-sm text-gray-700\">Tone feedback</span>\r\n//                   </label>\r\n//                   <label className=\"flex items-center\">\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={request.includeClarityFeedback}\r\n//                       onChange={(e) => setRequest({ ...request, includeClarityFeedback: e.target.checked })}\r\n//                       className=\"rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\r\n//                     />\r\n//                     <span className=\"ml-2 text-sm text-gray-700\">Clarity feedback</span>\r\n//                   </label>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Generated Reply Section */}\r\n//           {generateReplyMutation.data && (\r\n//             <div className=\"bg-gray-50 px-4 py-4 sm:px-6\">\r\n//               <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Generated Reply</h4>\r\n//               <div className=\"bg-white p-4 rounded-lg border border-gray-200 mb-4\">\r\n//                 <pre className=\"whitespace-pre-wrap text-sm text-gray-900\">\r\n//                   {generateReplyMutation.data.generatedReply}\r\n//                 </pre>\r\n//               </div>\r\n\r\n//               {/* Feedback Section */}\r\n//               {(generateReplyMutation.data.toneFeedback.length > 0 || generateReplyMutation.data.clarityFeedback.length > 0) && (\r\n//                 <div className=\"space-y-4\">\r\n//                   {generateReplyMutation.data.toneFeedback.length > 0 && (\r\n//                     <div>\r\n//                       <h5 className=\"text-sm font-medium text-gray-900 mb-2\">Tone Feedback</h5>\r\n//                       <div className=\"space-y-2\">\r\n//                         {generateReplyMutation.data.toneFeedback.map((feedback: FeedbackItem, index: number) => (\r\n//                           <div\r\n//                             key={index}\r\n//                             className={`p-3 rounded-lg border ${getSeverityColor(feedback.severity)}`}\r\n//                           >\r\n//                             <div className=\"flex items-start\">\r\n//                               <div className=\"flex-1\">\r\n//                                 <p className=\"text-sm font-medium\">{feedback.category}</p>\r\n//                                 <p className=\"text-sm mt-1\">{feedback.suggestion}</p>\r\n//                                 <p className=\"text-xs mt-1 opacity-75\">{feedback.reason}</p>\r\n//                               </div>\r\n//                               <span className={`text-xs px-2 py-1 rounded-full ${getSeverityColor(feedback.severity)}`}>\r\n//                                 {feedback.severity}\r\n//                               </span>\r\n//                             </div>\r\n//                           </div>\r\n//                         ))}\r\n//                       </div>\r\n//                     </div>\r\n//                   )}\r\n\r\n//                   {generateReplyMutation.data.clarityFeedback.length > 0 && (\r\n//                     <div>\r\n//                       <h5 className=\"text-sm font-medium text-gray-900 mb-2\">Clarity Feedback</h5>\r\n//                       <div className=\"space-y-2\">\r\n//                         {generateReplyMutation.data.clarityFeedback.map((feedback: FeedbackItem, index: number) => (\r\n//                           <div\r\n//                             key={index}\r\n//                             className={`p-3 rounded-lg border ${getSeverityColor(feedback.severity)}`}\r\n//                           >\r\n//                             <div className=\"flex items-start\">\r\n//                               <div className=\"flex-1\">\r\n//                                 <p className=\"text-sm font-medium\">{feedback.category}</p>\r\n//                                 <p className=\"text-sm mt-1\">{feedback.suggestion}</p>\r\n//                                 <p className=\"text-xs mt-1 opacity-75\">{feedback.reason}</p>\r\n//                               </div>\r\n//                               <span className={`text-xs px-2 py-1 rounded-full ${getSeverityColor(feedback.severity)}`}>\r\n//                                 {feedback.severity}\r\n//                               </span>\r\n//                             </div>\r\n//                           </div>\r\n//                         ))}\r\n//                       </div>\r\n//                     </div>\r\n//                   )}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Action Buttons */}\r\n//           <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={handleGenerate}\r\n//               disabled={generateReplyMutation.isPending}\r\n//               className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-primary-600 text-base font-medium text-white hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:ml-3 sm:w-auto sm:text-sm disabled:opacity-50\"\r\n//             >\r\n//               {generateReplyMutation.isPending ? (\r\n//                 <>\r\n//                   <div className=\"spinner mr-2\"></div>\r\n//                   Generating...\r\n//                 </>\r\n//               ) : (\r\n//                 'Generate Reply'\r\n//               )}\r\n//             </button>\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={onClose}\r\n//               className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n//             >\r\n//               Close\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AiReplyGenerator;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport {\r\n  XMarkIcon,\r\n  PaperAirplaneIcon,\r\n  DocumentTextIcon,\r\n  ClockIcon,\r\n  SparklesIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { emailApi } from '../services/api';\r\nimport { AiReplyRequest } from '../types';\r\n\r\ninterface OriginalEmail {\r\n  from: string;\r\n  subject: string;\r\n  body?: string;\r\n}\r\n\r\ninterface AiReplyGeneratorProps {\r\n  emailId: string;\r\n  originalEmail?: OriginalEmail;\r\n  onClose: () => void;\r\n  onReplySent?: () => void;\r\n}\r\n\r\nexport default function AiReplyGenerator({\r\n  emailId,\r\n  originalEmail,\r\n  onClose,\r\n  onReplySent\r\n}: AiReplyGeneratorProps) {\r\n  const [replyContent, setReplyContent] = useState('');\r\n\r\n  // Generate AI reply mutation\r\n  const generateReplyMutation = useMutation({\r\n    mutationFn: () => {\r\n      const request: AiReplyRequest = {\r\n        emailId,\r\n        tone: 'professional',\r\n        style: 'detailed',\r\n        includeToneFeedback: true,\r\n        includeClarityFeedback: true\r\n      };\r\n      return emailApi.generateAiReply(request);\r\n    },\r\n    onSuccess: (data) => {\r\n      setReplyContent(data.generatedReply); // set editable content\r\n    },\r\n    onError: (error) => {\r\n      console.error('Error generating AI reply:', error);\r\n      alert('Failed to generate AI reply. Please try again.');\r\n    }\r\n  });\r\n\r\n  // Send reply mutation\r\n  const sendReplyMutation = useMutation({\r\n    mutationFn: (data: { emailId: string; reply: string }) =>\r\n      emailApi.sendReply(data.emailId, data.reply, 'current-user'),\r\n    onSuccess: () => {\r\n      onReplySent?.();\r\n      onClose();\r\n    },\r\n    onError: (error) => {\r\n      console.error('Error sending reply:', error);\r\n      alert('Failed to send reply. Please try again.');\r\n    }\r\n  });\r\n\r\n  const handleGenerateReply = () => generateReplyMutation.mutate();\r\n\r\n  const handleSendReply = () => {\r\n    if (!replyContent.trim()) {\r\n      alert('Reply cannot be empty.');\r\n      return;\r\n    }\r\n    sendReplyMutation.mutate({\r\n      emailId,\r\n      reply: replyContent\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-2xl relative\">\r\n        {/* Close button */}\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-3 right-3 text-gray-400 hover:text-gray-600\"\r\n        >\r\n          <XMarkIcon className=\"h-6 w-6\" />\r\n        </button>\r\n\r\n        {/* Header */}\r\n        <h2 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center\">\r\n          <SparklesIcon className=\"h-5 w-5 text-indigo-500 mr-2\" />\r\n          AI Reply Generator\r\n        </h2>\r\n\r\n        {/* Original Email (optional) */}\r\n        {originalEmail && (\r\n          <div className=\"mb-4 border-l-4 border-gray-200 pl-4 text-sm text-gray-600\">\r\n            <p><strong>From:</strong> {originalEmail.from}</p>\r\n            <p><strong>Subject:</strong> {originalEmail.subject}</p>\r\n            {originalEmail.body && (\r\n              <p className=\"mt-2 line-clamp-3\">{originalEmail.body}</p>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* AI Reply Textarea */}\r\n        <div className=\"mb-4\">\r\n          {generateReplyMutation.isPending && (\r\n            <div className=\"flex items-center text-gray-500 mb-2\">\r\n              <ClockIcon className=\"h-5 w-5 mr-2 animate-spin\" />\r\n              Generating AI reply...\r\n            </div>\r\n          )}\r\n\r\n          <textarea\r\n            value={replyContent}\r\n            onChange={(e) => setReplyContent(e.target.value)}\r\n            rows={8}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\r\n            placeholder=\"AI-generated reply will appear here...\"\r\n          />\r\n        </div>\r\n\r\n        {/* Actions */}\r\n        <div className=\"flex justify-end space-x-3\">\r\n          {!generateReplyMutation.data ? (\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleGenerateReply}\r\n              disabled={generateReplyMutation.isPending}\r\n              className=\"inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm disabled:opacity-50\"\r\n            >\r\n              {generateReplyMutation.isPending ? (\r\n                <>\r\n                  <ClockIcon className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                  Generating...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <DocumentTextIcon className=\"h-4 w-4 mr-2\" />\r\n                  Generate AI Reply\r\n                </>\r\n              )}\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleSendReply}\r\n              disabled={sendReplyMutation.isPending}\r\n              className=\"inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-green-600 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 sm:text-sm disabled:opacity-50\"\r\n            >\r\n              {sendReplyMutation.isPending ? (\r\n                <>\r\n                  <ClockIcon className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <PaperAirplaneIcon className=\"h-4 w-4 mr-2\" />\r\n                  Send Reply\r\n                </>\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}